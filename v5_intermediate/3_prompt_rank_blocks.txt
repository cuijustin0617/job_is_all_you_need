
        You are an expert resume tailoring assistant. Your task is to evaluate resume blocks
        against a job description and determine:
        
        1. Which blocks MUST be included in the resume (these are non-negotiable)
        2. Rank the remaining blocks in priority order (most important first)
        
        RESUME BLOCKS:
        {
  "block_3": {
    "block_type": "work experience",
    "title": "SWE/SDE/MLE/MLops Intern",
    "company": "Modiface",
    "location": "Toronto, CA",
    "duration": "May 2024 - Present",
    "bullets": [
      "Engineered a robust data processing pipeline to augment a synthetic 3D-face dataset (25M images) using stable diffusion with Python and Shell scripting, achieving a 17% improvement in facepoints prediction accuracy.",
      "Developed a seamless model conversion tool to translate in-house computer vision models from PyTorch to TensorFlow, ensuring consistent cross-platform integration, reducing latency by over 10%.",
      "Optimized inference performance of generative AI models (including GANs and diffusion-based models) by integrating OpenVINO, reducing latency by over 40% and enhancing scalability.",
      "Developed a Python-based fine-tuning pipeline integrating existing training conversation pairs and formatting scripts to enhance beuaty chatbot by replacing the in-context learning approach",
      "Architected end-to-end fine-tuning pipeline for conversational AI systems, replacing in-context learning with supervised fine-tuning on 5k+ curated dialogue pairs",
      "Refactored skin diagnosis repository using object-oriented design, consolidating recurring patterns into a unified sign registry and score normalization framework, enhancing code maintainability and consistency.",
      "Finetuned Stable Diffusion LoRA models to improve task-specific GenAI performance, improving accuracy by 40%.",
      "Refined eyeliner extraction through advanced k-means clustering and adaptive HSV thresholding techniques, boosting accuracy in distinguishing facial makeup regions and optimizing the overall inference pipeline.",
      "Spearheaded the redesign and development of an internal computer vision model profiling tool's metric panel using TypeScript. This dashboard provided real-time monitoring of key performance indicators such as FPS, memory usage, and track time, enhancing system observability and performance tuning."
    ]
  },
  "block_4": {
    "block_type": "work experience",
    "title": "SWE/SDE/MLE/Applied ML/ML Research intern",
    "company": "Data-Driven Decision Making Lab (UofT)",
    "location": "Toronto, CA",
    "duration": "April 2023 - September 2023",
    "bullets": [
      "Designed and implemented a RAG-based chatbot system leveraging LLM APIs for dynamic natural language interactions and personalized responses.",
      "Architected the application using object-oriented design patterns, creating a modular system with 10+ interchangeable components for different NLP workflows.",
      "Developed core infrastructure in Python with 5+ API integrations, implementing rate limiting and caching mechanisms to handle 500+ RPM.",
      "Built a custom data pipeline using FAISS vector database to process and embed 1M+ product entries for real-time retrieval.",
      "Conducted comprehensive system testing including unit tests (95% coverage) and integration tests with simulated synthetic users using LLMs.",
      "Delivered technical demonstrations to 20+ Meta engineers and executives, showcasing system architecture and RAG features.",
      "Authored detailed documentation including API specs, deployment guides, and maintenance procedures.",
      "Retrieval-Augmented Conversational Recommendation System (SIGIR 2024, 1st Author): Developed an open source RAG-based conversational recommendation system powered by GPT-4.",
      "Implemented two-tower dense retrieval with FAISS indexing 5M+ item embeddings for real-time similarity search.",
      "Designed system architecture using OOP principles in Python, integrating LLM orchestration.",
      "Published work at SIGIR 2024 and demoed the system to Meta\u2019s engineering leadership.",
      "Query Reformulation for Query-Driven Recommendation (SIGIR 2025, Co-Author): Invented a query reformulation method that combines breadth expansion and depth elaboration.",
      "Curated 3 domain-specific datasets (hotels, restaurants, travel) synthetically with LLMs and labeled query-document relevance.",
      "Benchmarked against existing approaches, improving MAP@10, MAP@30 by over 10%.",
      "Published findings at SIGIR 2025 with ablation studies on reformulation components."
    ]
  },
  "block_5": {
    "block_type": "work experience",
    "title": "Software Engineer Intern",
    "company": "Voith Hydro",
    "location": "Montreal, CA",
    "duration": "May 2022 - September 2022",
    "bullets": [
      "Engineered a SharePoint infrastructure solution to centralize engineering resources, deployed to 200+ users across the engineering department",
      "Automated material specification analysis by creating Python scripts (Pandas/NumPy) to process CSV datasets, generating standardized reports that reduced manual review time.",
      "Conducted user research interviews with 15+ engineers to optimize UI/UX flow, resulting in 95% adoption rate within first deployment month"
    ]
  },
  "block_6": {
    "block_type": "publication",
    "title": "Retrieval-Augmented Conversational Recommendation with Prompt-Based Semi-Structured Natural Language State Tracking",
    "authorship": "First-author",
    "conference": "ACM SIGIR",
    "year": "2024"
  },
  "block_7": {
    "block_type": "publication",
    "title": "Elaborative Subtopic Query Reformulation for Query-Driven Recommendation",
    "authorship": "Co-author",
    "conference": "ACM SIGIR",
    "year": "2025 (under review)"
  },
  "block_8": {
    "block_type": "project",
    "title": "Subjective Summarization with PCA + LLM",
    "description": "Developed a novel approach to summarize opinion-based datasets using LDA + LLMs to identify key topics and opposing viewpoints. Produced structured summaries that capture stance distributions and core arguments while maintaining interpretability."
  },
  "block_9": {
    "block_type": "project",
    "title": "Geometric Approach to Query Performance Prediction",
    "description": "Explored a geometric approach to predicting query performance in information retrieval by analyzing embedding vector properties in high-dimensional space. Leveraged volume characteristics and spatial relationships to guide query reformulation and improve search effectiveness."
  },
  "block_10": {
    "block_type": "project",
    "title": "LLM Powered Resume Modifier for Job Descriptions",
    "description": "Engineered a multi-agent system using Google's Gemini AI to tailor LaTeX resumes. The system parses resumes, condenses job descriptions, and employs relevance scoring and content selection to optimize work experiences and extras. Integrated a VLM feedback loop for formatting refinement and visual consistency."
  },
  "block_11": {
    "block_type": "awards",
    "list": [
      "The Wallberg Undergraduate Scholarships x2 (2022, 2024) -- Awarded to undergraduates with highest averages.",
      "Undergraduate Student Research Awards (2023) -- NSERC Canada.",
      "Fujino/Smith Emergence Scholarships (2022) -- Awarded to first-year undergraduates with highest averages."
    ]
  }
}
        
        JOB REQUIREMENTS:
        {
  "skills": [
    "Machine learning",
    "NLP",
    "Software development",
    "API development",
    "Service development",
    "User interface development",
    "Node.js",
    "Java",
    "AWS services",
    "Python",
    "RESTful APIs",
    "Service integration",
    "Unit testing",
    "Integration testing",
    "Pandas",
    "NumPy",
    "ElasticSearch",
    "JavaScript (plus)"
  ],
  "knowledge": [
    "Machine Learning fundamentals",
    "NLP concepts",
    "Language model architectures (GPT, BERT)",
    "LLMs concepts",
    "RAG concepts",
    "Fine-tuning models",
    "Embeddings for information retrieval",
    "Software development best practices",
    "Design patterns",
    "Testing principles",
    "Automation principles",
    "Security standards",
    "Data protection standards"
  ],
  "responsibilities": [
    "Build ML models",
    "Build LLM models",
    "Design, build, develop, publish, and maintain APIs, services, and user interfaces",
    "Design, build, train, publish, and maintain machine learning models",
    "Experiment with different models",
    "Build RAG based solutions using LLMs",
    "Collaborate on developing RAG based LLM / AI Agent solutions",
    "Design and develop scalable and secure APIs",
    "Work with AWS services",
    "Implement RESTful APIs",
    "Handle integrations between services / ML inference APIs",
    "Write unit and integration tests",
    "Ensure compliance with security and data protection standards",
    "Collaborate with the product team",
    "Troubleshoot and debug applications"
  ],
  "qualifications": [
    "Currently pursuing a post-secondary degree or program",
    "Student at a Canadian University",
    "Proficiency in Java or JavaScript",
    "Exposure to ML libraries (with Java or JavaScript proficiency)",
    "Familiarity with basic JavaScript knowledge (plus)"
  ]
}
        
        RANKING CRITERIA:
        - Work experience directly relevant to the job requirements should be prioritized highly and usually be in MUST INCLUDE
        - For research/R&D positions, relevant or prestigious publications should be in MUST INCLUDE
        - Projects are generally less important than work experience, but directly relevant projects can be prioritized
        - Don't consider bullet length at this stage - focus on relevance only
        
        Return your analysis in this JSON format:
        
        {
          "must_include": [
            "block_1",
            "block_7"
          ],
          "ranked_list": [
            {
              "block_id": "block_4",
              "rank": 1
            },
            {
              "block_id": "block_2",
              "rank": 2
            }
          ]
        }
        
        IMPORTANT NOTES:
        - The "must_include" list should contain block_ids that are essential, e.g. a resume cannot not have any work experience
        - The "ranked_list" should contain all remaining blocks ranked from most important (rank 1) to least important (rank n)
        - Ensure every block from the provided resume blocks appears exactly once (either in must_include or ranked_list)
        - Provide the output as valid JSON with no additional text or explanation
        